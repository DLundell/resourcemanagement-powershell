<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lithnet.ResourceManagement.Client</name>
    </assembly>
    <members>
        <member name="T:Lithnet.ResourceManagement.Client.OperationType">
            <summary>
            Defines the type of operation in progress on an object
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.OperationType.None">
            <summary>
            No operation has been specified
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.OperationType.Create">
            <summary>
            A create operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.OperationType.Update">
            <summary>
            An update operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.OperationType.Delete">
            <summary>
            A delete operation
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.GroupOperator">
            <summary>
            The type of boolean operator to apply to an XPath query gruop
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.GroupOperator.And">
            <summary>
            The boolean 'and' operator
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.GroupOperator.Or">
            <summary>
            The boolean 'or' operator
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ComparisonOperator">
            <summary>
            /The type of value comparison to perform between an attribute and a value in an XPath query
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.Equals">
            <summary>
            The attribute is equal to the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            <item>Reference</item>
            <item>DateTime</item>
            <item>Integer</item>
            <item>Boolean</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.NotEquals">
            <summary>
            The attribute does not equal the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            <item>Reference</item>
            <item>DateTime</item>
            <item>Integer</item>
            <item>Boolean</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.GreaterThan">
            <summary>
            The attribute is greater than the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>DateTime</item>
            <item>Integer</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.GreaterThanOrEquals">
            <summary>
            The attribute is greater than or equal to the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>DateTime</item>
            <item>Integer</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.LessThan">
            <summary>
            The attribute is less than the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>DateTime</item>
            <item>Integer</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.LessThanOrEquals">
            <summary>
            The attribute is less than or equal to the specified value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>DateTime</item>
            <item>Integer</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.IsPresent">
            <summary>
            The attribute has a value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            <item>Reference</item>
            <item>DateTime</item>
            <item>Integer</item>
            <item>Boolean</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.IsNotPresent">
            <summary>
            The attribute does not have a value
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            <item>Reference</item>
            <item>DateTime</item>
            <item>Integer</item>
            <item>Boolean</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.Contains">
            <summary>
            The attribute contains the specified text
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.StartsWith">
            <summary>
            The attribute starts with the specified text
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            </list>
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ComparisonOperator.EndsWith">
            <summary>
            The attribute ends with the specified test
            </summary>
            <remarks>
            This value is only supported when querying the following attribute types
            <list>
            <item>String</item>
            </list>
            </remarks>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.NoSuchObjectTypeException">
            <summary>
            The exception that is thrown when an object type is requested that does not exist in the schema
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the NoSuchObjectTypeException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NoSuchObjectTypeException class
            </summary>
            <param name="attributeName">The name of the object type that was not found</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the NoSuchObjectTypeException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.NoSuchAttributeException">
            <summary>
            The exception that is thrown when an attribute is requested that does not exist on a particular object class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchAttributeException.#ctor">
            <summary>
            Initializes a new instance of the NoSuchAttributeException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchAttributeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NoSuchAttributeException class
            </summary>
            <param name="attributeName">The name of the attribute that was not found</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchAttributeException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NoSuchAttributeException class
            </summary>
            <param name="attributeName">The name of the attribute that was not found</param>
            <param name="objectType">The name of the object type that did not contain the attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.NoSuchAttributeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the NoSuchAttributeException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ResourceNotFoundException">
            <summary>
            The exception that is thrown when an resource could not be found
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeNames">
            <summary>
            Defines a list of built-in attribute names in the Resource Management Service
            </summary>
            <remarks>
            The constants defined is this class can be used in place of manually specifying the names of the attributes as strings in code
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Name">
            <summary>
            The Name attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.DisplayName">
            <summary>
            The DisplayName attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.AccountName">
            <summary>
            The AccountName attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Creator">
            <summary>
            The Creator attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.DeletedTime">
            <summary>
            The DeletedTime attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Description">
            <summary>
            The Description attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.DetectedRulesList">
            <summary>
            The DetectedRulesList attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.ExpectedRulesList">
            <summary>
            The ExpectedRulesList attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.ExpirationTime">
            <summary>
            The ExpirationTime attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.MVObjectID">
            <summary>
            The MVObjectID attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.ObjectID">
            <summary>
            The ObjectID attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.ResourceTime">
            <summary>
            The ResourceTime attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.ObjectType">
            <summary>
            The ObjectType attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.UsageKeyword">
            <summary>
            The UsageKeyword attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.StringRegex">
            <summary>
            The StringRegex attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Multivalued">
            <summary>
            The Multivalued attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Localizable">
            <summary>
            The Localizable attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.DataType">
            <summary>
            The DataType attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.BoundObjectType">
            <summary>
            The BoundObjectType attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.BoundAttributeType">
            <summary>
            The BoundAttributeType attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Required">
            <summary>
            The Required attribute
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeNames.Member">
            <summary>
            The Member attribute
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeValue">
            <summary>
            Contains the value or values of a specified attribute, and tracks changes made to the values
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.ValueComparer">
            <summary>
            A static comparer object used to test for equality between values
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.value">
            <summary>
            The value of the attribute when the attribute is single-valued
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.initialValue">
            <summary>
            The initial value of the attribute when the attribute is single-valued
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.values">
            <summary>
            The values of the attribute when the attribute is multivalued
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.initialValues">
            <summary>
            The initial values of the attribute when the attribute is multivalued
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValue.hasChanged">
            <summary>
            An internal field used to track if the attribute value has been changed
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.#ctor(Lithnet.ResourceManagement.Client.AttributeTypeDefinition)">
            <summary>
            Initializes a new instance of the AttributeValue class
            </summary>
            <param name="type">The definition of the attribute to hold the values for</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.#ctor(Lithnet.ResourceManagement.Client.AttributeTypeDefinition,System.Object)">
            <summary>
            Initializes a new instance of the AttributeValue class
            </summary>
            <param name="type">The definition of the attribute to hold the values for</param>
            <param name="value">The initial value of the attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.Commit">
            <summary>
            Sets the internal initial value fields of the class to the current values
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.UndoChanges">
            <summary>
            Reverts any changes made to the attribute values, restoring them to their initial state
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.SetValue(System.Object)">
            <summary>
            Sets the value of the attribute, overwritting any existing values present on the object
            </summary>
            <param name="value">The new value or values to set</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.SetSingleValue(System.Object,System.Boolean)">
            <summary>
            Sets the value of the attribute when it is single-valued
            </summary>
            <param name="value">The value to set</param>
            <param name="initialLoad">A value indicating if the attribute value should be considered an initial value, rather than a change</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.AddValue(System.Object)">
            <summary>
            Add the specified value to the collection of values of a multivalued attribute, or sets the value of a single-valued attribute
            </summary>
            <param name="value">The value to remove</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.RemoveValues">
            <summary>
            Removes all values from the attribute
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.RemoveValue(System.Object)">
            <summary>
            Removes a specific value from an attribute
            </summary>
            <param name="value">The value to remove</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.SetMultiValue(System.Object,System.Boolean)">
            <summary>
            Sets the value of an attribute when it is multivalued
            </summary>
            <param name="value">The value to set</param>
            <param name="initialLoad">A value indicating if the attribute value should be considered an initial value, rather than a change</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.GenerateValueChanges">
            <summary>
            Generates a list of value changes based on the initial and current values of the attribute
            </summary>
            <returns>A list of changes</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.ConvertValueToAttributeType(System.Object)">
            <summary>
            Performs conversion of supported CLR types into the native data type format that matches the attribute definition
            </summary>
            <param name="value">The value to convert</param>
            <returns>A value converted into the correct data type for the atttribute</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.GetHashCode">
            <summary>
            Gets the hash code for this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.Equals(System.Object)">
            <summary>
            Tests the current attribute value collection for equality with another object
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the object has the same values as this object, or false if they are different</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.GetSerializationValues">
            <summary>
            Gets the values of the attribute converted to strings for serialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.op_Equality(Lithnet.ResourceManagement.Client.AttributeValue,System.Object)">
            <summary>
            Compares the values within an AttributeValue object for equality with another object
            </summary>
            <param name="a">The AttributeValue object containing the values to compare</param>
            <param name="b">An object to compare</param>
            <returns>True if the value or values of the AttributeValue object match the value or values provided</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.op_Inequality(Lithnet.ResourceManagement.Client.AttributeValue,System.Object)">
            <summary>
            Compares the values within an AttributeValue object for non-equality with another object
            </summary>
            <param name="a">The AttributeValue object containing the values to compare</param>
            <param name="b">An object to compare</param>
            <returns>True if the value or values of the AttributeValue object do not match the value or values provided</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValue.ToString">
            <summary>
            Returns the values of this object as a comma separated string
            </summary>
            <returns>A comma separated string</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.Attribute">
            <summary>
            Gets the attribute that represents the values in this collection
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.ValueChanges">
            <summary>
            Gets a list of pending value changes for this attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.AttributeName">
            <summary>
            Gets the name of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.IsNull">
            <summary>
            Gets a value indicating whether the value is null or empty
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.Value">
            <summary>
            Gets or sets the raw value of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.StringValue">
            <summary>
            Gets the value of a single-valued attribute as a string
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.IntegerValue">
            <summary>
            Gets the value of a single-valued attribute as a 64-bit integer
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.BooleanValue">
            <summary>
            Gets the value of a single-valued attribute as a boolean value
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.BinaryValue">
            <summary>
            Gets the value of a single-valued attribute as a byte array
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.ReferenceValue">
            <summary>
            Gets the value of a single-valued attribute as a reference value
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.DateTimeValue">
            <summary>
            Gets the value of a single-valued attribute as a DateTime value
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.StringValues">
            <summary>
            Gets the values of a multivalued attribute as a collection of string values
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.IntegerValues">
            <summary>
            Gets the values of a multivalued attribute as a collection of 64-bit integer values
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.BinaryValues">
            <summary>
            Gets the values of a multivalued attribute as a collection of byte array values
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.ReferenceValues">
            <summary>
            Gets the values of a multivalued attribute as a collection of reference values
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValue.DateTimeValues">
            <summary>
            Gets the values of a multivalued attribute as a collection of DateTime values
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeValueChange">
            <summary>
            Defines a pending change to an attribute value
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueChange.#ctor(Microsoft.ResourceManagement.WebServices.IdentityManagementOperation.ModeType,System.Object)">
            <summary>
            Initializes a new instance of the AttributeValueChange class
            </summary>
            <param name="changeType">The modification type to apply</param>
            <param name="value">The value that is changing</param>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValueChange.ChangeType">
            <summary>
            Gets the modification type for this change
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValueChange.Value">
            <summary>
            Gets the value that is changing
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ResourceManagementClient">
            <summary>
            The main class used to create, update, delete, and search for objects in the resource management service
            </summary>
            <threadsafety static="true" instance="true"/>
            <example>
            <code language="cs" title="Using the Resource Management Client" source="..\Lithnet.ResourceManagement.Client.Help.Examples\T_ResourceManagementClient.cs" />
            </example>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementClient.resourceClient">
            <summary>
            The local instance of the Resource proxy
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementClient.resourceFactoryClient">
            <summary>
            The local instance of the ResourceFactory proxy
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementClient.searchClient">
            <summary>
            The local instance of the Search proxy
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementClient.WsHttpContextBinding">
            <summary>
            The binding used to connect to the resource management service
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.#cctor">
            <summary>
            Initializes the static members of the ResourceManagementClient class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.#ctor">
            <summary>
            Initializes a new instance of the ResourceManagementClient class
            </summary>
            <example>
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClientCtorExamples.cs" region="ResourceManagementClient()"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.#ctor(System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of the ResourceManagementClient class
            </summary>
            <param name="credentials">The credentials to use to connect to the service</param>
            <example>
            The following example shows how to load an instance of the <c>ResourceManagementClient</c> using a specific set of credentials
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClientCtorExamples.cs" region="ResourceManagementClient(System.Net.NetworkCredentials)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResources(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deletes the specified resources from the resource management service as a single composite operation
            </summary>
            <param name="resourceIDs">A collection of object IDs in GUID format to delete to delete</param>
            <remarks>
            Note that when using this method, the objects are passed to the Resource Management Service in a single request. In the Request History in the portal, this will appear as a single request, and the individual object IDs that were deleted will not be visible.
            </remarks>
            <example>
            The following example deletes a set of objects using a list of known GUIDs
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResources(IEnumerable{Guid})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResources(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the specified resources from the resource management service as a single composite operation
            </summary>
            <param name="resourceIDs">A collection of object IDs in string format to delete to delete</param>
            <remarks>
            Note that when using this method, the objects are passed to the Resource Management Service in a single request. In the Request History in the portal, this will appear as a single request, and the individual object IDs that were deleted will not be visible.
            </remarks>
            <example>
            The following example deletes a set of objects using a list of known GUIDs represented in string format
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResources(IEnumerable{String})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResources(System.Collections.Generic.IEnumerable{Microsoft.ResourceManagement.WebServices.UniqueIdentifier})">
            <summary>
            Deletes the specified resources from the resource management service as a single composite operation
            </summary>
            <param name="resourceIDs">A collection of references to delete</param>
            <remarks>
            Note that when using this method, the objects are passed to the Resource Management Service in a single request. In the Request History in the portal, this will appear as a single request, and the individual object IDs that were deleted will not be visible.
            </remarks>
            <example>
            The following example gets all the members of a set, and passes the reference attribute containing the objects to the delete function
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResources(IEnumerable{UniqueIdentifier})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResources(System.Collections.Generic.IEnumerable{Lithnet.ResourceManagement.Client.ResourceObject})">
            <summary>
            Deletes the specified resources from the resource management service as a single composite operation
            </summary>
            <param name="resources">A collection of resources to delete</param>
            <remarks>
            Note that when using this method, the objects are passed to the Resource Management Service in a single request. In the Request History in the portal, this will appear as a single request, and the individual object IDs that were deleted will not be visible.
            </remarks>
            <example>
            The following example performs a search for all Group objects, and passes the resulting enumerable to the delete function
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResources(IEnumerable{ResourceObject})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResource(Lithnet.ResourceManagement.Client.ResourceObject)">
            <summary>
            Deletes the specified resource from the resource management service
            </summary>
            <param name="resource">The resource to delete</param>
            <example>
            The following example deletes the specified resource object
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResource(ResourceObject)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResource(Microsoft.ResourceManagement.WebServices.UniqueIdentifier)">
            <summary>
            Deletes the specified resource from the resource management service
            </summary>
            <param name="id">The reference to the object to delete</param>
            <example>
            The following example shows how to delete an object using a reference attribute
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResource(UniqueIdentifier)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResource(System.Guid)">
            <summary>
            Deletes the specified resource from the resource management service
            </summary>
            <param name="id">The ID of the object to delete</param>
            <example>
            The following example shows how to delete an object using a known GUID
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResource(Guid)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.DeleteResource(System.String)">
            <summary>
            Deletes the specified resource from the resource management service
            </summary>
            <param name="id">The ID of the object to delete, in GUID format, with or without the urn: prefix</param>
            <example>
            The following example shows how to delete an object using a string representation of a GUID
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_DeleteResourceExamples.cs" region="DeleteResource(String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.SaveResources(Lithnet.ResourceManagement.Client.ResourceObject[])">
            <summary>
            Saves the specified resources in the resource management service. Updates are committed as a single composite operation, while adds are processed individually
            </summary>
            <param name="resources">The resources to update</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.SaveResources(System.Collections.Generic.IEnumerable{Lithnet.ResourceManagement.Client.ResourceObject})">
            <summary>
            Saves the specified resources in the resource management service. Updates are committed as a single composite operation, while adds are processed individually
            </summary>
            <param name="resources">The collection of resources to update</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.SaveResourcesParallel(System.Collections.Generic.IEnumerable{Lithnet.ResourceManagement.Client.ResourceObject})">
            <summary>
            Saves the specified resources in the resource management service. Each update is performed on its own thread
            </summary>
            <remarks>
            This method will reorder the operations to perform creates first, followed by updates and finally deletes
            </remarks>
            <param name="resources">The resources to save</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.SaveResourcesParallel(System.Collections.Generic.IEnumerable{Lithnet.ResourceManagement.Client.ResourceObject},System.Int32)">
            <summary>
            Saves the specified resources in the resource management service. Each update is performed on its own thread
            </summary>
            <remarks>
            This method will reorder the operations to perform creates first, followed by updates and finally deletes
            </remarks>
            <param name="maxDegreeOfParallelism">The maximum number of threads to use for the operation</param>
            <param name="resources">The resources to save</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.SaveResource(Lithnet.ResourceManagement.Client.ResourceObject)">
            <summary>
            Saves the specified resource in the resource management service
            </summary>
            <param name="resource">The resource to save</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.CreateResource(System.String)">
            <summary>
            Creates a template of a new object that can be used to save to the resource management service at a later stage
            </summary>
            <param name="objectType">The object type to create</param>
            <returns>An empty template of a new object that will be created in the resource management service when saved</returns>
            <example>
            The following example shows how to create a new resource in the Resource Management Service
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_CreateResourceExamples.cs" region="CreateResource(String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.CreateResourceTemplateForUpdate(System.String,Microsoft.ResourceManagement.WebServices.UniqueIdentifier)">
            <summary>
            Creates a template of an existing object that can be used to save to the resource management service at a later stage.
            As this is an empty template, there is no. validation performed on value changes. It is recommended to use <c ref="GetResource"/>
            and perform the update against the real object
            </summary>
            <param name="objectType">The type of object to create the template for</param>
            <param name="id">The ID of the object to update</param>
            <returns>An empty template of an existing object that can be updated in the resource management service when saved</returns>
            <example>
            The following example shows how to create a blank template of an object used to update the Resource Management Service
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_CreateResourceExamples.cs" region="CreateResourceTemplateForUpdate(String, UniqueIdentifier)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(System.Guid)">
            <summary>
            Gets a resource from the resource management service, retrieving all attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a known GUID value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(Guid)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a resource from the resource management service, retrieving only a specified set of attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a known GUID value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(Guid)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(System.String)">
            <summary>
            Gets a resource from the resource management service, retrieving all attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get as a GUID in string format</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a known GUID value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a resource from the resource management service, retrieving only a specified set of attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get as a GUID in string format</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a known GUID value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(Microsoft.ResourceManagement.WebServices.UniqueIdentifier)">
            <summary>
            Gets a resource from the resource management service, retrieving all attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a reference value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(UniqueIdentifier)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResource(Microsoft.ResourceManagement.WebServices.UniqueIdentifier,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a resource from the resource management service, retrieving only a specified set of attributes for the resource
            </summary>
            <param name="id">The ID of the resource to get</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>The resource represented by the specified ID</returns>
            <example>
            The following example shows how to get an object from a reference value
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceExamples.cs" region="GetResource(UniqueIdentifier)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourceByKey(System.String,System.String,System.Object)">
            <summary>
            Gets a resource from the resource management service using a unique attribute and value combination, retrieving all attributes for the resource
            </summary>
            <param name="objectType">The type of object to retrieve</param>
            <param name="attributeName">The name of the attribute used as the key</param>
            <param name="value">The value of the attribute</param>
            <returns>A resource that matches the specified criteria, or null of no object was found</returns>
            <exception cref="T:Lithnet.ResourceManagement.Client.TooManyResultsException">The method will throw this exception when more that one match was found for the specified criteria</exception>
            <example>
            The following example shows how get a user by its AccountName attribute
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceByKeyExamples.cs" region="GetResourceByKey(String, String, String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourceByKey(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a resource from the resource management service using a unique attribute and value combination, retrieving the specified attributes for the resource
            </summary>
            <param name="objectType">The type of object to retrieve</param>
            <param name="attributeName">The name of the attribute used as the key</param>
            <param name="value">The value of the attribute</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A resource that matches the specified criteria, or null of no object was found</returns>
            <exception cref="T:Lithnet.ResourceManagement.Client.TooManyResultsException">The method will throw this exception when more that one match was found for the specified criteria</exception>
            <example>
            The following example shows how get a user by its AccountName attribute
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceByKeyExamples.cs" region="GetResourceByKey(String, String, String)"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourceByKey(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Gets a resource from the resource management service using a set of unique attribute and value combinations, retrieving all attributes for the resource
            </summary>
            <param name="objectType">The type of object to retrieve</param>
            <param name="attributeValuePairs">A list of attribute value pairs that make this object unique</param>
            <returns>A resource that matches the specified criteria, or null of no object was found</returns>
            <exception cref="T:Lithnet.ResourceManagement.Client.TooManyResultsException">The method will throw this exception when more that one match was found for the specified criteria</exception>
            <example>
            The following example shows how get a user by using the AccountName and Domain pair of anchor attributes
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceByKeyExamples.cs" region="GetResourceByKey(String, Dictionary{String, String})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourceByKey(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a resource from the resource management service using a set of unique attribute and value combinations, retrieving the specified attributes for the resource
            </summary>
            <param name="objectType">The type of object to retrieve</param>
            <param name="attributeValuePairs">A list of attribute value pairs that make this object unique</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A resource that matches the specified criteria, or null of no object was found</returns>
            <exception cref="T:Lithnet.ResourceManagement.Client.TooManyResultsException">The method will throw this exception when more that one match was found for the specified criteria</exception>
            <example>
            The following example shows how get a user by using the AccountName and Domain pair of anchor attributes
            <code language="cs" title="Example" source="..\Lithnet.ResourceManagement.Client.Help.Examples\ResourceManagementClient_GetResourceByKeyExamples.cs" region="GetResourceByKey(String, Dictionary{String, String})"/>
            </example>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResources(System.String)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, synchronously, using the default page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResources(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, synchronously, using the default page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResources(System.String,System.Int32)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, synchronously, using the specified page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResources(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, synchronously, using the specified page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the default page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the default page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Int32)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the specified page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the specified page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Threading.CancellationTokenSource)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the default page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="cancellationToken">A cancellation object that can be used to terminate the search</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationTokenSource)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the default page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <param name="cancellationToken">A cancellation object that can be used to terminate the search</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Int32,System.Threading.CancellationTokenSource)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the specified page size
            WARNING: Due to the way that the resource management client processes unconstrained XPath queries, this function can cause excessive load on the underlying database. If the object type or attributes are known, use the overload of this function that supports specifying the attributes to get
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <param name="cancellationToken">A cancellation object that can be used to terminate the search</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourcesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationTokenSource)">
            <summary>
            Uses the specified XPath filter to find matching objects in the resource management service, retrieving all results asynchronously on a separate thread, using the specified page size, and retrieving the specified attributes
            </summary>
            <param name="filter">The XPath filter defining the search criteria</param>
            <param name="pageSize">The number of results to request from the server at a time</param>
            <param name="attributesToGet">The list of attributes to retrieve</param>
            <param name="cancellationToken">A cancellation object that can be used to terminate the search</param>
            <returns>A collection of matching resource objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.GetResourceCount(System.String)">
            <summary>
            Gets the number of resources that match a specified criteria
            </summary>
            <param name="filter">The XPath filter to use in the search</param>
            <returns>The number of resources that match the specified criteria</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.RefreshResource(Lithnet.ResourceManagement.Client.ResourceObject)">
            <summary>
            Performs an refresh of an object by updating the resource from the resource management service
            </summary>
            <param name="resource">The object to refresh</param>
            <returns>An XML representation of the resource</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.CreateResource(Lithnet.ResourceManagement.Client.ResourceObject)">
            <summary>
            Submits a resource template to the resource management service for creation
            </summary>
            <param name="resource">The resource template to create</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.PutResource(Lithnet.ResourceManagement.Client.ResourceObject)">
            <summary>
            Submits a resource template to the resource management service for update
            </summary>
            <param name="resource">The resource to update</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementClient.InitializeClients(Lithnet.ResourceManagement.Client.EndpointManager,System.Net.NetworkCredential,System.Boolean)">
            <summary>
            Initializes the WCF bindings, endpoints, and proxy objects
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceManagementClient.NetworkCredentials">
            <summary>
            Gets the credentials used to connect to the resource management service as specified in the configuration file
            </summary>
            <remarks>All instances of the <c>ResourceManagementClient</c> that are not loaded with a specific set of credentials will use the credentials specified in the configuration file. If not credentials are specified in the file, then the credentials of the current user are used</remarks>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceManagementClient.EndpointManager">
            <summary>
            Gets the instance of the endpoint manager used to build the endpoint configuration for the resource management service
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceManagementClient.Configuration">
            <summary>
            Gets the instance of the lithnetResourceManagementClient section from the configuration file
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.TooManyResultsException">
            <summary>
            The exception that is thrown when more than the expected number of search results was returned
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.TooManyResultsException.#ctor">
            <summary>
            Initializes a new instance of the TooManyResultsException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.TooManyResultsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TooManyResultsException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.TooManyResultsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TooManyResultsException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ResourceObject">
            <summary>
            Represents a resource from the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceObject.client">
            <summary>
            The client object used to pass save, update, and create operations to
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceObject.AttributesToIgnore">
            <summary>
            A list of attributes that should never be passed back to the Resource Management Service for updates
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceObject.attributes">
            <summary>
            The internal representation of attributes of the object
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(Lithnet.ResourceManagement.Client.OperationType,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="opType">The type of modification to set on the object</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The serialization context</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.String,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="type">The object type that this object will represent</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.String,Microsoft.ResourceManagement.WebServices.UniqueIdentifier,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="type">The object type that this object will represent</param>
            <param name="id">The ID of the object</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="objectElements">An enumeration of XmlElements that make up a partial response</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.Xml.XmlDictionaryReader,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="reader">An XmlDictionaryReader containing the full object definition</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.#ctor(System.Xml.XmlElement,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceObject class
            </summary>
            <param name="element">An XmlElement containing definition of the object from a set of fragments obtained from an enumeration response</param>
            <param name="client">The client used for further operations on this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.UndoChanges">
            <summary>
            Reverts the object back to its original state, undoing any pending attribute changes
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.Save(System.Boolean)">
            <summary>
            Saves the changes to the Resource Management Service
            </summary>
            <param name="refresh">A value indicating if the object should be refreshed from the Resource Management Service after the changes have been made</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.Save">
            <summary>
            Saves the changes to the Resource Management Service
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.HasValue(System.String)">
            <summary>
            Gets a value indicating whether the specified attribute is present on the object and has value
            </summary>
            <param name="name">The name of the attribute</param>
            <returns>Returns true if the attribute has a value and false if the attribute is not present on the object or is null</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.Refresh">
            <summary>
            Refreshes the object from the Resource Management Service
            </summary>
            <remarks>
            Note that this method will revert any pending changes on the object
            </remarks>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.ToString">
            <summary>
            Gets a string representation of this object
            </summary>
            <returns>A string based list of attribute and value pairs</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.GetSerializationValues">
            <summary>
            Gets a list of attributes and values for the resource in a string format suitable for serialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.CompleteCreateOperation(Microsoft.ResourceManagement.WebServices.UniqueIdentifier)">
            <summary>
            Called by the parent ResourceManagementClient when a create operation against the Resource Management Service was successful
            </summary>
            <param name="id">The new object ID that was assigned this object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.CommitChanges">
            <summary>
            Calls the Commit() method on all the AttributeValue objects in the collection
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.GetPutFragements">
            <summary>
            Gets a list of attribute changes as Put fragments for submission to the Resource Management Service
            </summary>
            <returns>A list of PutFragmentType objects containing all the value changes pending on the object</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.SetInitialAttributeValues(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Sets the internal attribute value collection with the initial values contained in the dictionary
            </summary>
            <param name="values">The initial attributes and values to set</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.AddRemainingAttributesFromSchema">
            <summary>
            Adds an empty AttributeValue object for the attributes present for this object class in the schema, but are not currently present on the object
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.PopulateResourceFromFullObject(System.Xml.XmlDictionaryReader)">
            <summary>
            Populates the ResourceObject from its full object definition
            </summary>
            <param name="reader">The XmlDictionaryReader containing the full object definition</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.PopulateResourceFromFragment(System.Xml.XmlElement)">
            <summary>
            Populates the ResourceObject from a collection of fragments received from an enumeration response
            </summary>
            <param name="element">The parent XmlElement containing the object definition</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.PopulateResourceFromPartialResponse(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})">
            <summary>
            Populates the ResourceObject from a partial response to a Get request
            </summary>
            <param name="objectElements">A collection of XmlElements defining the object</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data for serialization
            </summary>
            <param name="info">The serialization data</param>
            <param name="context">The serialization context</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceObject.DeserializeObject(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Deserializes an object from a serialization data set
            </summary>
            <param name="info">The serialization data</param>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.Client">
            <summary>
            Gets the client object used for create, update, and delete operations of this object
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.ObjectTypeName">
            <summary>
            Gets the object type name of this object
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.IsPlaceHolder">
            <summary>
            Gets a value indicating whether this object is a placeholder, and has not been obtained directly from the Resource Management Service
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.IsDeleted">
            <summary>
            Gets a value indicating whether this object has been deleted in the Resource Management Service
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.ModificationType">
            <summary>
            Gets the type of modification that will be performed on this object the next time it is saved
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.ObjectType">
            <summary>
            Gets the object type definition for this object
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.Attributes">
            <summary>
            Gets the collection of attributes and values associated with this object
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.ObjectID">
            <summary>
            Gets the object ID for this object
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.DisplayName">
            <summary>
            Gets the display name of the object, or null if no display name is present
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceObject.PendingChanges">
            <summary>
            Gets the changes that are pending for this object
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeValueCollection">
            <summary>
            Contains a collection of attributes and values
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeValueCollection.internalValues">
            <summary>
            The internal dictionary of attribute and value paiirs
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.#ctor">
            <summary>
            Initializes a new instance of the AttributeValuesCollection class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.Add(System.String,Lithnet.ResourceManagement.Client.AttributeValue)">
            <summary>
            Adds a new attribute value object to the internal dictionary
            </summary>
            <param name="attributeName">The name of the attribute</param>
            <param name="value">The attribute value to add</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.Add(Lithnet.ResourceManagement.Client.AttributeValue)">
            <summary>
            Adds a new attribute value object to the internal dictionary
            </summary>
            <param name="value">The attribute value to add</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.ContainsAttribute(System.String)">
            <summary>
            Gets a value indicating whether the collection contains a specific attribute
            </summary>
            <param name="attributeName">The name of the attribute</param>
            <returns>True if the collection contains the specified attribute</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates though the AttributeValueCollection
            </summary>
            <returns>Returns an enumerator that iterates though the AttributeValueCollection</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates though the AttributeValueCollection
            </summary>
            <returns>Returns an enumerator that iterates though the AttributeValueCollection</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeValueCollection.Item(System.String)">
            <summary>
            Gets an attributattributeeName value collection
            </summary>
            <param name="attributeName">The name of the attribute to get</param>
            <returns>An <c ref="AttributeValue">AttributeValue</c> object</returns>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ObjectTypeNames">
            <summary>
            Defines a list of built-in object type names in the Resource Management Service
            </summary>
            <remarks>
            The constants defined is this class can be used in place of manually specifying the names of the object types as strings in code
            </remarks>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.Person">
            <summary>
            The person object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.Set">
            <summary>
            The Set object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.ManagementPolicyRule">
            <summary>
            The ManagementPolicyRule object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.Workflow">
            <summary>
            The WorkflowDefinition object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.Group">
            <summary>
            The Group object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.AttributeTypeDescription">
            <summary>
            The AttributeTypeDescription object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.ObjectTypeDescription">
            <summary>
            The ObjectTypeDescription object type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ObjectTypeNames.BindingDescription">
            <summary>
            The BindingDescription object type
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ISearchResultCollection">
            <summary>
            An enumeration of resource objects returned from a search
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ISearchResultCollection.Count">
            <summary>
            The number of objects returned from the search
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync">
            <summary>
            Provides an enumerator that can iterate through search results from the Resource Management Service. This class obtains all result pages on a separate thread, without waiting for the iterator to reach the end of a page before requesting a new one.
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.context">
            <summary>
            The enumeration context object provided by the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.details">
            <summary>
            The details of the enumeration operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.searchClient">
            <summary>
            The search client used for this search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.client">
            <summary>
            The resource management client used for this search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.resultSet">
            <summary>
            The result set obtained from the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.pageSize">
            <summary>
            The page size used for the search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.consumingEnumerable">
            <summary>
            The internal enumerable that consumes results as they are generated
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.token">
            <summary>
            The cancellation token used to abort the operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.EndOfSequence">
            <summary>
            Indicates if the Resource Management Service has provided all the results and signaled the end of sequence flag
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.#ctor(Microsoft.ResourceManagement.WebServices.WSEnumeration.EnumerateResponse,System.Int32,Lithnet.ResourceManagement.Client.ResourceManagementService.SearchClient,System.Threading.CancellationTokenSource,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the SearchResultCollectionAsync class
            </summary>
            <param name="response">The initial enumeration response from the Resource Management Service</param>
            <param name="pageSize">The page size used in the search operation</param>
            <param name="searchClient">The client proxy used for performing the search</param>
            <param name="tokenSource">The cancellation token source that can be used to abort the async operation</param>
            <param name="client">The client used to convert response data into ResourceObjects</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.ExecuteProducer">
            <summary>
            Starts the producer thread which enumerates the results from the resource management service
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.PopulateResultSet(Microsoft.ResourceManagement.WebServices.WSEnumeration.ItemListType)">
            <summary>
            Populates the result set from the items returned from the enumeration call
            </summary>
            <param name="items">The items contained in the response from the server</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.ReleaseEnumerationContext">
            <summary>
            Signals to the resource management service that we are done with the enumeration context
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate over the search results obtained from the Resource Management Service
            </summary>
            <returns>An enumerator for the search results</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that can iterate over the search results obtained from the Resource Management Service
            </summary>
            <returns>An enumerator for the search results</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.SearchResultCollectionAsync.Count">
            <summary>
            Gets the number of results in the search response
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.SearchResultCollection">
            <summary>
            Provides an enumerator that can iterate through search results from the Resource Management Service. This class provides a synchronous search, where the next page of results is only requested once the enumerator has run out of results.
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.context">
            <summary>
            The enumeration context object provided by the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.details">
            <summary>
            The details of the enumeration operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.searchClient">
            <summary>
            The search client used for this search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.client">
            <summary>
            The resource management client used for this search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.resultSet">
            <summary>
            The result set obtained from the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.pageSize">
            <summary>
            The page size used for the search operation
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.SearchResultCollection.EndOfSequence">
            <summary>
            Indicates if the Resource Management Service has provided all the results and signaled the end of sequence flag
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.#ctor(Microsoft.ResourceManagement.WebServices.WSEnumeration.EnumerateResponse,System.Int32,Lithnet.ResourceManagement.Client.ResourceManagementService.SearchClient,Lithnet.ResourceManagement.Client.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the SearchResultCollection class
            </summary>
            <param name="response">The initial enumeration response from the Resource Management Service</param>
            <param name="pageSize">The page size used in the search operation</param>
            <param name="searchClient">The client proxy used for performing the search</param>
            <param name="client">The client used to convert response data into ResourceObjects</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.PopulateResultSet(Microsoft.ResourceManagement.WebServices.WSEnumeration.ItemListType)">
            <summary>
            Populates the internal result set with the items obtained from the search response
            </summary>
            <param name="items">The items obtained from the enumeration or pull response</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate over the search results obtained from the Resource Management Service
            </summary>
            <returns>An enumerator for the search results</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that can iterate over the search results obtained from the Resource Management Service
            </summary>
            <returns>An enumerator for the search results</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.GetNextPage">
            <summary>
            Gets the next page of search results from the Resource Management Service
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.Dispose">
            <summary>
            Disposes the current object
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.SearchResultCollection.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">Indicates if this object is being disposed from a call to the Dispose() method</param>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.SearchResultCollection.Count">
            <summary>
            Gets the number of results in the search response
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeType">
            <summary>
            Defines an attribute data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Unknown">
            <summary>
            An unknown or unspecified data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Binary">
            <summary>
            A binary data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Boolean">
            <summary>
            A boolean data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.DateTime">
            <summary>
            A DateTime data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Integer">
            <summary>
            An integer data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Reference">
            <summary>
            A reference data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.String">
            <summary>
            A string data type
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.AttributeType.Text">
            <summary>
            A text data type
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ReadOnlyValueModificationException">
            <summary>
            The exception that is thrown when an attempt to modify a read-only attribute is made
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ReadOnlyValueModificationException.#ctor">
            <summary>
            Initializes a new instance of the ReadOnlyValueModificationException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ReadOnlyValueModificationException.#ctor(Lithnet.ResourceManagement.Client.AttributeTypeDefinition)">
            <summary>
            Initializes a new instance of the ReadOnlyValueModificationException class
            </summary>
            <param name="attribute">The attribute that was illegally modified</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ReadOnlyValueModificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ReadOnlyValueModificationException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ReadOnlyValueModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ReadOnlyValueModificationException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.AttributeTypeDefinition">
            <summary>
            Defines an attribute type in the Resource Management Service schema
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.#cctor">
            <summary>
            Initializes the static instance of the AttributeTypeDefinition class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.#ctor(System.String,Lithnet.ResourceManagement.Client.AttributeType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes an instance of the AttributeTypeDefinititon class
            </summary>
            <param name="systemName">The system name of the attribute</param>
            <param name="type">The data type of the attribute</param>
            <param name="isMultivalued">A value indicating if the attribute is multivalued or single-valued</param>
            <param name="isReadOnly">A value indicating if the attribute is read only</param>
            <param name="isRequired">A value indicating if the attribute is required</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.#ctor(System.Xml.Schema.XmlSchemaElement)">
            <summary>
            Initializes an instance of the AttributeTypeDefinition class from its XML schema definition
            </summary>
            <param name="schemaObject">The XML definition of the attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.GetAttributeDetails(System.Xml.Schema.XmlSchemaAnnotation)">
            <summary>
            Gets the basic details of the attribute from the XML schema annotation object
            </summary>
            <param name="annotation">The XML schema annotation containing the basic details of the attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.LoadSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
            <summary>
            Gets the definition of the attribute from an XML schema simple type
            </summary>
            <param name="type">The XML schema simple type representing this attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.LoadComplexType(System.Xml.XmlQualifiedName)">
            <summary>
            Gets the definition of the attribute from an XML complex type
            </summary>
            <param name="type">The XML schema complex type representing this attribute</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.HasStringAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
            <summary>
            Gets a value indicating whether the XML schema annotation contains an annotation describing this attribute as a string type
            </summary>
            <param name="annotation">The XML schema annotation to inspect</param>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.ToString">
            <summary>
            Gets the system name of this attribute
            </summary>
            <returns>A string representing the system name of the attribute</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.IsRequired">
            <summary>
            Gets a value that indicates whether the attribute is required
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.Type">
            <summary>
            Gets the data type of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.SystemName">
            <summary>
            Gets the system name of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.DisplayName">
            <summary>
            Gets the display name of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.Description">
            <summary>
            Gets the description of the attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.IsMultivalued">
            <summary>
            Gets a value indicating whether this attribute is multivalued or single-valued
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.IsReadOnly">
            <summary>
            Gets a value indicating whether this attribute is read only
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.Regex">
            <summary>
            Gets the regular expression valued to validate the correctness of this attribute
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.AttributeTypeDefinition.ReadOnlyAttributeNames">
            <summary>
            Gets or sets the list of attribute names that are always read-only in the schema
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ObjectTypeDefinition">
            <summary>
            Defines an object type from the Resource Management Service schema and its associated attributes
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.#ctor(System.Xml.Schema.XmlSchemaComplexType)">
            <summary>
            Initializes a new instance of the ObjectTypeDefinition class
            </summary>
            <param name="complexType">The XML definition of the object type</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.GetObjectTypeDetails(System.Xml.Schema.XmlSchemaAnnotation)">
            <summary>
            Parses the basic details of the object type from its XML definition
            </summary>
            <param name="annotation">The XmlSchemaAnnotation containing the basic details of the object type</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.ToString">
            <summary>
            Gets the system name of the object type
            </summary>
            <returns>A string containing the system name of the object type</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.SystemName">
            <summary>
            Gets the system name of the object type
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.DisplayName">
            <summary>
            Gets the display name of the object type
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.Description">
            <summary>
            Gets the description of the object type
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.Attributes">
            <summary>
            The read-only collection of attributes types associated with this object class
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ObjectTypeDefinition.Item(System.String)">
            <summary>
            Gets the definition of an attribute by its name
            </summary>
            <param name="attributeName">The name of the attribute</param>
            <returns>An AttributeTypeDefinition for the specified attribute, or null if the attribute doesn't exist on the object type</returns>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.ResourceManagementSchema">
            <summary>
            A static class that reflects the schema of the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementSchema.ObjectTypes">
            <summary>
            The internal dictionary containing the object type name to object type definition mapping
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementSchema.lockObject">
            <summary>
            The object used to synchronize access updates to the schema from multiple threads
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementSchema.isLoaded">
            <summary>
            A value that indicates if the schema has been loaded from the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.ResourceManagementSchema.ElementsToIgnore">
            <summary>
            A list of elements contained in the XML schema from the Resource Management Service that should be ignored. Certain complex types are present
            in the XML definition that do not represent object classes
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.#cctor">
            <summary>
            Initializes the static instance of the ResourceManagementSchema class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.RefreshSchema(Lithnet.ResourceManagement.Client.EndpointManager)">
            <summary>
            Forces a download of the schema from the ResourceManagementService
            </summary>
            <remarks>
            This method should be called after making changes to ResourceObjects that form the schema
            </remarks>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.GetAttributeType(System.String)">
            <summary>
            Gets the data type of the specific attribute
            </summary>
            <param name="attributeName">The attribute name</param>
            <returns>An <c>AttributeType</c> value</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.IsAttributeMultivalued(System.String)">
            <summary>
            Gets a value indicating whether the specific attribute is multivalued
            </summary>
            <param name="attributeName">The attribute ame</param>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.GetMetadataSet(Lithnet.ResourceManagement.Client.EndpointManager)">
            <summary>
            Gets the metadata set from the Resource Management Service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.ResourceManagementSchema.PopulateSchemaFromMetadata(System.ServiceModel.Description.MetadataSet)">
            <summary>
            Populates the internal defintion of the schema based on the representation contained in the metadata set
            </summary>
            <param name="set">The metadata set describing the schema</param>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.ResourceManagementSchema.MandatoryAttributes">
            <summary>
            Gets the list of attributes that are considered mandatory for all object classes
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.Extensions">
            <summary>
            Contains various helper extensions for use with the this library
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.Extensions.ToResourceManagementServiceDateFormat(System.DateTime)">
            <summary>
            Converts a date time to the ISO 8601 date string required by the Resource Management Service
            </summary>
            <param name="dateTime">The date and time to convert</param>
            <returns>An ISO 8601 date format string</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.Extensions.ToResourceManagementServiceDateFormat(System.DateTime,System.Boolean)">
            <summary>
            Converts a date time to the ISO 8601 date string required by the Resource Management Service
            </summary>
            <param name="dateTime">The date and time to convert</param>
            <param name="zeroMilliseconds">A value indicating whether the millisecond component of the date should be zeroed to avoid rounding/round-trip issues</param>
            <returns>An ISO 8601 date format string</returns>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.InternalExtensions">
            <summary>
            Defines extension methods used in the application
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToCommaSeparatedString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts an enumeration of strings into a comma separated list
            </summary>
            <param name="strings">The enumeration of string objects</param>
            <returns>The comma separated list of strings</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToSeparatedString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Converts an enumeration of strings into a comma separated list
            </summary>
            <param name="strings">The enumeration of string objects</param>
            <param name="separator">The character or string to use to separate the strings</param>
            <returns>The comma separated list of strings</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToNewLineSeparatedString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts an enumeration of strings into a comma separated list
            </summary>
            <param name="strings">The enumeration of string objects</param>
            <returns>The comma separated list of strings</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.AppendWithCommaSeparator(System.String,System.String)">
            <summary>
            Appends two string together with a comma and a space
            </summary>
            <param name="text">The original string</param>
            <param name="textToAppend">The string to append</param>
            <returns>The concatenated string</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.AppendWithSeparator(System.String,System.String,System.String)">
            <summary>
            Appends two string together with a comma and a space
            </summary>
            <param name="text">The original string</param>
            <param name="separator">The character or string to use to separate the strings</param>
            <param name="textToAppend">The string to append</param>
            <returns>The concatenated string</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToSmartString(System.Object)">
            <summary>
            Gets an informative string representation of an object
            </summary>
            <param name="obj">The object to convert</param>
            <returns>An informative string representation of an object</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToSmartStringOrNull(System.Object)">
            <summary>
            Gets an informative string representation of an object
            </summary>
            <param name="obj">The object to convert</param>
            <returns>An informative string representation of an object, or a null value if the object is null</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ToSmartStringOrEmptyString(System.Object)">
            <summary>
            Gets an informative string representation of an object
            </summary>
            <param name="obj">The object to convert</param>
            <returns>An informative string representation of an object, or a null value if the object is null</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.TruncateString(System.String,System.Int32)">
            <summary>
            Truncates a string to the specified length
            </summary>
            <param name="obj">The string to truncate</param>
            <param name="totalLength">The length to truncate to</param>
            <returns></returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.ContainsSameElements``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets a value indicating whether two enumerations contain the same elements, even if they are in different orders
            </summary>
            <typeparam name="T">The type of items in the enumerations</typeparam>
            <param name="enumeration1">The first list to compare</param>
            <param name="enumeration2">The second list to compare</param>
            <returns>A value indicating if the two enumerations contain the same objects</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.Truncate(System.DateTime,System.Int64)">
            <summary>
            <para>Truncates a DateTime to a specified resolution.</para>
            <para>A convenient source for resolution is TimeSpan.TicksPerXXXX constants.</para>
            </summary>
            <param name="date">The DateTime object to truncate</param>
            <param name="resolution">e.g. to round to nearest second, TimeSpan.TicksPerSecond</param>
            <returns>Truncated DateTime</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.InternalExtensions.DisableContextManager``1(System.ServiceModel.ClientBase{``0})">
            <summary>
            Disables the context manager for the specified client
            </summary>
            <typeparam name="T">The type of client proxy</typeparam>
            <param name="client">The client proxy to disable the context manager for</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException">
            <summary>
            The exception that is thrown when an attribute is made to set an attribute value that cannot be converted into the native data type for that attribute
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedDataTypeException class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the UnsupportedDataTypeException class
            </summary>
            <param name="expected">The data type that was expected</param>
            <param name="actual">The data type that was provided</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException.#ctor(Lithnet.ResourceManagement.Client.AttributeType,System.Type)">
            <summary>
            Initializes a new instance of the UnsupportedDataTypeException class
            </summary>
            <param name="expected">The data type that was expected</param>
            <param name="actual">The data type that was provided</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnsupportedDataTypeException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.UnsupportedDataTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UnsupportedDataTypeException class
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that was the cause of this exception</param>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.IXPathQueryObject">
            <summary>
            An interface that defines a query predicate
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.IXPathQueryObject.BuildQueryString">
            <summary>
            Builds the string representation of the query object
            </summary>
            <returns>Returns the string representatio of the query object</returns>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.XPathDereferencedExpression">
            <summary>
            An XPath expression that involves dereferencing an attribute
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.XPathExpression">
            <summary>
            A class used to build a standard XPath expression, containing one or more queries
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathExpression.#ctor(System.String,Lithnet.ResourceManagement.Client.IXPathQueryObject)">
            <summary>
            Initializes a new instance of the XPathExpression class
            </summary>
            <param name="objectType">The type of object to query for</param>
            <param name="query">The query component for this expression</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathExpression.BuildExpression">
            <summary>
            Builds the XPath expression
            </summary>
            <returns>The string representation of the expression</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathExpression.ToString">
            <summary>
            Gets a string that represents this object
            </summary>
            <returns>The string representation of the expression</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathExpression.ObjectType">
            <summary>
            Gets or sets the type of object to query
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathExpression.Query">
            <summary>
            Gets or sets the query component for this expression. This may be a <c>XPathQuery</c> or <c>XPathQueryGroup</c>
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathDereferencedExpression.#ctor(System.String,System.String,Lithnet.ResourceManagement.Client.IXPathQueryObject)">
            <summary>
            Initializes a new instance of the XPathDereferencedExpression class
            </summary>
            <param name="objectType">The object type used in the expression</param>
            <param name="dereferenceAttribute">The name of the attribute to dereference</param>
            <param name="query">The query used to build the expression</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathDereferencedExpression.BuildExpression">
            <summary>
            Builds the expression using the classes parameters
            </summary>
            <returns>A string representation of the dereferencing XPath expression</returns>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathDereferencedExpression.DereferenceAttribute">
            <summary>
            Gets or sets the name of the attribute to dereference
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.XPathFilterBuilder">
            <summary>
            A utility class that provides the ability to build XPath queries
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathFilterBuilder.CreateFilter(System.String,System.String,System.Object)">
            <summary>
            Creates an XPath filter for the specified object type and attribute value pair
            </summary>
            <param name="objectType">The object type to query</param>
            <param name="attributeName">The name of the attribute to query</param>
            <param name="attributeValue">The value of the attribute to query</param>
            <returns>An XPath query string</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathFilterBuilder.CreateFilter(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},Lithnet.ResourceManagement.Client.ComparisonOperator,Lithnet.ResourceManagement.Client.GroupOperator)">
            <summary>
            Creates an XPath filter for the specified object type and attribute/value pairs. Multiple pairs are joined with an 'and' operator
            </summary>
            <param name="objectType">The object type to query</param>
            <param name="keyValuePairs">The list to attribute and value pairs to query for</param>
            <returns>An XPath query string</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathFilterBuilder.CreateFilter(System.String,Lithnet.ResourceManagement.Client.AttributeValuePairCollection,Lithnet.ResourceManagement.Client.ComparisonOperator,Lithnet.ResourceManagement.Client.GroupOperator)">
            <summary>
            Creates an XPath filter for the specified object type and attribute/value pairs. Multiple pairs are joined with an 'and' operator
            </summary>
            <param name="objectType">The object type to query</param>
            <param name="keyValuePairs">The list to attribute and value pairs to query for</param>
            <returns>An XPath query string</returns>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.XPathQuery">
            <summary>
            Represents a predicate within an XPath expression that is used for comparing an attribute with a value
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.XPathQuery.MaxLong">
            <summary>
            The maximum value of an integer that the Resource Management Service web service seems to be able to parse
            Technically this should be long.MaxValue, but that throws a parsing error in the web service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.XPathQuery.MaxDate">
            <summary>
            The maximum value of a date time in the Resource Management Service
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.XPathQuery.attributeType">
            <summary>
            The type of the attribute used in the query
            </summary>
        </member>
        <member name="F:Lithnet.ResourceManagement.Client.XPathQuery.isMultivalued">
            <summary>
            The mutivalued status of the attribute used in the query
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.#ctor(System.String,Lithnet.ResourceManagement.Client.ComparisonOperator)">
            <summary>
            Initializes a new instance of the XPathQuery class
            </summary>
            <param name="attributeName">The name of the attribute to compare against</param>
            <param name="comparisonOperator">The value comparison operator to use</param>
            <remarks>
            This constructor only supports the use of the <c>ComparisonOperator.IsPresent</c> and <c>ComparisonOperator.NotPresent</c> values
            </remarks>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.#ctor(System.String,Lithnet.ResourceManagement.Client.ComparisonOperator,System.Object)">
            <summary>
            Initializes a new instance of the XPathQuery class
            </summary>
            <param name="attributeName">The name of the attribute to compare against</param>
            <param name="comparisonOperator">The value comparison operator to use</param>
            <param name="value">The value to compare against</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.#ctor(System.String,Lithnet.ResourceManagement.Client.ComparisonOperator,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the XPathQuery class
            </summary>
            <param name="attributeName">The name of the attribute to compare against</param>
            <param name="comparisonOperator">The value comparison operator to use</param>
            <param name="value">The value to compare against</param>
            <param name="negate">Indicates if this query should be negated with the not() operator</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.#ctor(System.String,Lithnet.ResourceManagement.Client.ComparisonOperator,System.Object,System.Boolean,Lithnet.ResourceManagement.Client.AttributeType,System.Boolean)">
            <summary>
            Initializes a new instance of the XPathQuery class
            </summary>
            <param name="attributeName">The name of the attribute to compare against</param>
            <param name="comparisonOperator">The value comparison operator to use</param>
            <param name="value">The value to compare against</param>
            <param name="negate">Indicates if this query should be negated with the not() operator</param>
            <param name="attributeType">The data type of the attribute being queried</param>
            <param name="isMultivalued">The multivalued status of the attribute being queried</param>
            <remarks>
            This constructor can be used when a connection to the resource management service not available. The attribute type and multivalued status are not validated against the schema
            </remarks>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.SetupBuilder(System.String,Lithnet.ResourceManagement.Client.ComparisonOperator,System.Object,System.Boolean,Lithnet.ResourceManagement.Client.AttributeType,System.Boolean)">
            <summary>
            Sets up the query object and validates the passed in parameters to ensure they are compatible with each other
            </summary>
            <param name="attributeName">The name of the attribute being queried</param>
            <param name="comparisonOperator">THe value comparison operator to use</param>
            <param name="value">The value to use in the query</param>
            <param name="negate">Indicates if the query should be negated with the not() operator</param>
            <param name="attributeType">The type of the target attribute</param>
            <param name="isMultivalued">The multivalued status of the attribute being queried</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.BuildQueryString">
            <summary>
            Builds the query component
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ToString">
            <summary>
            Gets the string representation of this object
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.BuildXpathPredicate">
            <summary>
            Calls the appropriate function to build the predicate
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionEquals">
            <summary>
            Builds the predicate for an equals comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionNotEquals">
            <summary>
            Builds the predicate for a not equals comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionGreaterThan">
            <summary>
            Builds the predicate for a greater than comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionGreaterThanOrEquals">
            <summary>
            Builds the predicate for a greater than or equals to comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionLessThan">
            <summary>
            Builds the predicate for a less than comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionLessThanOrEquals">
            <summary>
            Builds the predicate for a less than or equals to comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionIsPresent">
            <summary>
            Builds the predicate for an attribute presence check
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionIsNotPresent">
            <summary>
            Builds the predicate for an attribute not present check
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionContains">
            <summary>
            Builds the predicate for a contains comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionStartsWith">
            <summary>
            Builds the predicate for a starts with comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.GetExpressionEndsWith">
            <summary>
            Builds the predicate for an ends with comparison
            </summary>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ProcessNegation(System.String)">
            <summary>
            Converts the query into a not() expression
            </summary>
            <param name="expression">The expression to negate</param>
            <returns>A string containing the query</returns>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidTypeOperatorCombination">
            <summary>
            Throws an exception when an invalid data type and comparison operator is detected
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidIntegerOperator">
            <summary>
            Throws an exception when an invalid comparison operator is used with an integer data type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidDateTimeOperator">
            <summary>
            Throws an exception when an invalid comparison operator is used with a date time data type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidStringOperator">
            <summary>
            Throws an exception when an invalid comparison operator is used with a string data type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidReferenceOperator">
            <summary>
            Throws an exception when an invalid comparison operator is used with a reference data type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidBinaryOperator">
            <summary>
            Throws an exception when attempting to query a binary attribute type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidTextOperator">
            <summary>
            Throws an exception when attempting to query a text attribute type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidBooleanOperator">
            <summary>
            Throws an exception when an invalid comparison operator is used with a boolean data type
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQuery.ThrowOnInvalidNegateCombination">
            <summary>
            Throws an exception when trying to negate an expression that does not support negation
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQuery.Negate">
            <summary>
            Gets a value indicating if the condition in this query will be negated with the not() operator
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQuery.Operator">
            <summary>
            Gets the value comparison operator used in the query
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQuery.AttributeName">
            <summary>
            Gets the name of the attribute used in the query
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQuery.Value">
            <summary>
            Gets the value that is used in the query
            </summary>
        </member>
        <member name="T:Lithnet.ResourceManagement.Client.XPathQueryGroup">
            <summary>
            Represents a group of predicates within an XPath expression
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQueryGroup.#ctor">
            <summary>
            Initializes a new instance of the XpathQueryGroup class
            </summary>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQueryGroup.#ctor(Lithnet.ResourceManagement.Client.GroupOperator,Lithnet.ResourceManagement.Client.IXPathQueryObject[])">
            <summary>
            Initializes a new instance of the XpathQueryGroup class
            </summary>
            <param name="groupOperator">The logical operator to apply to queries within this group</param>
            <param name="queries">The query objects used in the group</param>
        </member>
        <member name="M:Lithnet.ResourceManagement.Client.XPathQueryGroup.#ctor(Lithnet.ResourceManagement.Client.GroupOperator,System.Collections.Generic.IEnumerable{Lithnet.ResourceManagement.Client.IXPathQueryObject})">
            <summary>
            Initializes a new instance of the XpathQueryGroup class
            </summary>
            <param name="groupOperator">The logical operator to apply to queries within this group</param>
            <param name="queries">The query objects used in the group</param>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQueryGroup.Queries">
            <summary>
            Gets the list of query objects used in the group
            </summary>
        </member>
        <member name="P:Lithnet.ResourceManagement.Client.XPathQueryGroup.GroupOperator">
            <summary>
            Gets the logical operator to apply to queries within this group
            </summary>
        </member>
    </members>
</doc>
